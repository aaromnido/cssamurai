---
const navItems = [
  { label: 'Inicio', url: '/' },
  { label: 'Política', url: '/category/politica' },
  { label: 'Diseño', url: '/category/diseno' },
  { label: 'Tecnología', url: '/category/tecnologia' },
  { label: 'Acerca de mí', url: '/acerca-de-mi' },
];

const pathname = Astro.url.pathname;
---

<header class="sticky top-0 z-10 bg-white/80 dark:bg-primary-950/80 backdrop-blur-md border-b border-primary-100 dark:border-primary-800 transition-colors duration-300">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <nav class="flex items-center justify-between h-16">
      <a href="/" class="text-lg font-bold tracking-tight hover:text-accent-600 dark:hover:text-accent-400 transition-colors">
        <span class="text-accent-600 dark:text-accent-400">css</span>amurai
      </a>
      
      <div class="hidden md:flex items-center space-x-6">
        {navItems.map(item => (
          <a 
            href={item.url} 
            class={`text-sm font-medium hover:text-accent-600 dark:hover:text-accent-400 transition-colors ${
              pathname === item.url || (item.url !== '/' && pathname.startsWith(item.url)) 
                ? 'text-accent-600 dark:text-accent-400' 
                : 'text-primary-600 dark:text-primary-300'
            }`}
          >
            {item.label}
          </a>
        ))}

        <button 
          id="theme-toggle" 
          aria-label="Toggle theme"
          class="p-2 text-primary-600 dark:text-primary-300 hover:text-accent-600 dark:hover:text-accent-400 transition-colors"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden dark:block" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
          </svg>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 block dark:hidden" viewBox="0 0 20 20" fill="currentColor">
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
          </svg>
        </button>
      </div>
      
      <button 
        id="mobile-menu-button" 
        aria-label="Toggle menu" 
        class="md:hidden p-2 text-primary-600 dark:text-primary-300 hover:text-accent-600 dark:hover:text-accent-400 transition-colors"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </nav>
  </div>
  
  <div id="mobile-menu" class="hidden md:hidden bg-white dark:bg-primary-950 border-b border-primary-100 dark:border-primary-800 transition-colors duration-300">
    <div class="container mx-auto px-4 py-3 space-y-2">
      {navItems.map(item => (
        <a 
          href={item.url} 
          class={`block px-3 py-2 rounded-md text-base font-medium ${
            pathname === item.url || (item.url !== '/' && pathname.startsWith(item.url)) 
              ? 'bg-primary-100 dark:bg-primary-800 text-accent-600 dark:text-accent-400' 
              : 'text-primary-600 dark:text-primary-300 hover:bg-primary-50 dark:hover:bg-primary-900 hover:text-accent-600 dark:hover:text-accent-400'
          }`}
        >
          {item.label}
        </a>
      ))}
      <div class="px-3 py-2 flex items-center">
        <span class="text-sm font-medium text-primary-600 dark:text-primary-300 mr-3">Theme</span>
        <button 
          id="mobile-theme-toggle" 
          aria-label="Toggle theme"
          class="p-2 text-primary-600 dark:text-primary-300 hover:text-accent-600 dark:hover:text-accent-400 transition-colors"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden dark:block" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
          </svg>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 block dark:hidden" viewBox="0 0 20 20" fill="currentColor">
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
          </svg>
        </button>
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileThemeToggle = document.getElementById('mobile-theme-toggle');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }
    
    if (mobileThemeToggle) {
      mobileThemeToggle.addEventListener('click', () => {
        const isDark = document.documentElement.classList.toggle('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      });
    }
  });
</script>