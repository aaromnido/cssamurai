---
import { formatDate } from '../utils/date';

interface Props {
  post: {
    slug: string;
    title: string;
    description: string;
    pubDate: Date;
    category: string;
    image?: string;
    readingTime?: string;
  };
}

const { post } = Astro.props;
const formattedDate = formatDate(post.pubDate);
---

<article class="group overflow-hidden flex flex-col h-full">
  <a href={`/blog/${post.slug}`} class="block h-full">
    <div class="aspect-[16/9] bg-primary-100 dark:bg-primary-800 overflow-hidden rounded-lg mb-4">
      {post.image ? (
        <img 
          src={post.image} 
          alt={post.title} 
          class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500"
          loading="lazy"
        />
      ) : (
        <div class="w-full h-full flex items-center justify-center bg-primary-200 dark:bg-primary-800">
          <span class="text-primary-500 dark:text-primary-400 font-mono">cssamurai</span>
        </div>
      )}
    </div>
    
    <div class="flex-grow space-y-2">
      <div class="flex items-center text-xs gap-3">
        <span class="font-medium text-accent-600 dark:text-accent-400 uppercase tracking-wider">
          {post.category}
        </span>
        {post.readingTime && (
          <span class="text-primary-500 dark:text-primary-400">
            {post.readingTime}
          </span>
        )}
      </div>
      
      <h3 class="text-lg font-bold leading-tight group-hover:text-accent-600 dark:group-hover:text-accent-400 transition-colors">
        {post.title}
      </h3>
      <p class="text-primary-600 dark:text-primary-400 text-sm line-clamp-2">
        {post.description}
      </p>
      <div class="text-xs text-primary-500 dark:text-primary-400">
        {formattedDate}
      </div>
    </div>
  </a>
</article>